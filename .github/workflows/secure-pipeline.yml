name: DevSecOps Secure Pipeline

on:
  push:
    branches: [ main, candidate-assessment ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    name: "1. Security Automation Scan"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install security tools
        run: |
          pip install bandit safety detect-secrets

      - name: Run Multi-Scanner Orchestrator
        run: |
          python3 ./scripts/multi-scanner-orchestrator/security-scan.py --path ./application --format json
        id: security-scan

  container-scan:
    name: "2. Build & Container Scan"
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the Docker image
        run: docker build -t devsecops-app:latest ./application

      - name: Scan for vulnerabilities with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'devsecops-app:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  iac-scan:
    name: "3. IaC Security Scan"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Terraform files with TFSec
        uses: aquasecurity/tfsec-action@master
        with:
          working-directory: './infrastructure/terraform'